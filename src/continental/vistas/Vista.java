package continental.vistas;

import continental.accesoADatos.CategoriaData;
import continental.accesoADatos.HabitacionData;
import continental.accesoADatos.HuespedData;
import continental.accesoADatos.ReservaData;
import continental.entidades.Habitacion;
import continental.entidades.Reserva;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Image;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Grupo 61
 */
public class Vista extends javax.swing.JFrame {

    private static HuespedData HD;
    private static HabitacionData HabD;
    private static ReservaData RD;
    private static CategoriaData CD;

    public Vista() {

        initComponents();
        HD = new HuespedData();
        HabD = new HabitacionData();
        RD = new ReservaData();
        CD = new CategoriaData();
        actualizaconDeHabitacionYReserva();
    }

    public static HuespedData getHD() {
        return HD;
    }

    public static HabitacionData getHabD() {
        return HabD;
    }

    public static ReservaData getRD() {
        return RD;
    }

    public static CategoriaData getCD() {
        return CD;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        ImageIcon icon = new ImageIcon(getClass().getResource("/continental/imagenes/Background.png"));
        Image image = icon.getImage();
        escritorio = new javax.swing.JDesktopPane(){
            public void paintComponent(Graphics g){
                g.drawImage(image,0,0,getWidth(),getHeight(),this);
            }
        };
        logo = new javax.swing.JLabel();
        jMenuBar = new javax.swing.JMenuBar();
        jMHuesped = new javax.swing.JMenu();
        jMIGestionDeHuesped = new javax.swing.JMenuItem();
        jMIEdicionDeHuesped = new javax.swing.JMenuItem();
        jMHabitacion = new javax.swing.JMenu();
        jMIGestionDeHabitacion = new javax.swing.JMenuItem();
        jMIEdicionDeHabitaciones = new javax.swing.JMenuItem();
        jMICategorias = new javax.swing.JMenuItem();
        jMReserva = new javax.swing.JMenu();
        jMGestionDeReserva = new javax.swing.JMenuItem();
        jMIReservaPorHuesped = new javax.swing.JMenuItem();
        jMIReservaPorHabitacion = new javax.swing.JMenuItem();
        jMIReservaPorFecha = new javax.swing.JMenuItem();
        jMSalir = new javax.swing.JMenu();

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        escritorio.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                escritorioComponentRemoved(evt);
            }
        });
        escritorio.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                escritorioComponentResized(evt);
            }
        });

        escritorio.setLayer(logo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, escritorioLayout.createSequentialGroup()
                .addContainerGap(794, Short.MAX_VALUE)
                .addComponent(logo)
                .addContainerGap())
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, escritorioLayout.createSequentialGroup()
                .addContainerGap(621, Short.MAX_VALUE)
                .addComponent(logo)
                .addContainerGap())
        );

        jMenuBar.setBackground(new java.awt.Color(51, 51, 51));
        jMenuBar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        jMHuesped.setText("Huesped");

        jMIGestionDeHuesped.setText("Gestion de Huesped");
        jMIGestionDeHuesped.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIGestionDeHuespedActionPerformed(evt);
            }
        });
        jMHuesped.add(jMIGestionDeHuesped);

        jMIEdicionDeHuesped.setText("Edicion de Huesped");
        jMIEdicionDeHuesped.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIEdicionDeHuespedActionPerformed(evt);
            }
        });
        jMHuesped.add(jMIEdicionDeHuesped);

        jMenuBar.add(jMHuesped);

        jMHabitacion.setText("Habitacion");

        jMIGestionDeHabitacion.setText("Gestion de Habitacion");
        jMIGestionDeHabitacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIGestionDeHabitacionActionPerformed(evt);
            }
        });
        jMHabitacion.add(jMIGestionDeHabitacion);

        jMIEdicionDeHabitaciones.setText("Remodelacion de Habitaciones");
        jMIEdicionDeHabitaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIEdicionDeHabitacionesActionPerformed(evt);
            }
        });
        jMHabitacion.add(jMIEdicionDeHabitaciones);

        jMICategorias.setText("Categoria de Habitaciones");
        jMICategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICategoriasActionPerformed(evt);
            }
        });
        jMHabitacion.add(jMICategorias);

        jMenuBar.add(jMHabitacion);

        jMReserva.setText("Reserva");

        jMGestionDeReserva.setText("Gestion de reserva");
        jMGestionDeReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMGestionDeReservaActionPerformed(evt);
            }
        });
        jMReserva.add(jMGestionDeReserva);

        jMIReservaPorHuesped.setText("Reserva por Huesped");
        jMIReservaPorHuesped.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIReservaPorHuespedActionPerformed(evt);
            }
        });
        jMReserva.add(jMIReservaPorHuesped);

        jMIReservaPorHabitacion.setText("Reserva por Habitacion");
        jMIReservaPorHabitacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIReservaPorHabitacionActionPerformed(evt);
            }
        });
        jMReserva.add(jMIReservaPorHabitacion);

        jMIReservaPorFecha.setText("Reserva por Fecha");
        jMIReservaPorFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIReservaPorFechaActionPerformed(evt);
            }
        });
        jMReserva.add(jMIReservaPorFecha);

        jMenuBar.add(jMReserva);

        jMSalir.setText("Salir");
        jMSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMSalirMouseClicked(evt);
            }
        });
        jMenuBar.add(jMSalir);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMIGestionDeHuespedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIGestionDeHuespedActionPerformed

        GestionDeHuesped GDH = new GestionDeHuesped();
        abrirVentana(GDH);
    }//GEN-LAST:event_jMIGestionDeHuespedActionPerformed

    private void jMIEdicionDeHuespedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIEdicionDeHuespedActionPerformed

        EdiciondeHuesped EDA = new EdiciondeHuesped();
        abrirVentana(EDA);
    }//GEN-LAST:event_jMIEdicionDeHuespedActionPerformed

    private void jMIGestionDeHabitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIGestionDeHabitacionActionPerformed
        
        GestionDeHabitacion GDHab = new GestionDeHabitacion();
        abrirVentana(GDHab);
    }//GEN-LAST:event_jMIGestionDeHabitacionActionPerformed

    private void jMIEdicionDeHabitacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIEdicionDeHabitacionesActionPerformed

        RemodelacionDeHabitacion RDH = new RemodelacionDeHabitacion();
        abrirVentana(RDH);
    }//GEN-LAST:event_jMIEdicionDeHabitacionesActionPerformed

    private void jMICategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICategoriasActionPerformed

        CategoriasVista cav = new CategoriasVista();
        abrirVentana(cav);
    }//GEN-LAST:event_jMICategoriasActionPerformed

    private void jMGestionDeReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMGestionDeReservaActionPerformed

        GestionDeReservas gr = new GestionDeReservas();
        abrirVentana(gr);
    }//GEN-LAST:event_jMGestionDeReservaActionPerformed

    private void jMIReservaPorHuespedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIReservaPorHuespedActionPerformed

        ReservaPorHuesped RPH = new ReservaPorHuesped();
        abrirVentana(RPH);
    }//GEN-LAST:event_jMIReservaPorHuespedActionPerformed

    private void jMIReservaPorHabitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIReservaPorHabitacionActionPerformed

        ReservaPorHabitacion RPHab = new ReservaPorHabitacion();
        abrirVentana(RPHab);
    }//GEN-LAST:event_jMIReservaPorHabitacionActionPerformed

    private void jMIReservaPorFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIReservaPorFechaActionPerformed

        ReservaPorFecha RPF = new ReservaPorFecha();
        abrirVentana(RPF);
    }//GEN-LAST:event_jMIReservaPorFechaActionPerformed

    private void jMSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMSalirMouseClicked

        int salir = JOptionPane.showConfirmDialog(this, "¿Esta seguro?", "SALIR", JOptionPane.YES_OPTION);
        if (salir == 0) {
            
            System.exit(0);
        }
    }//GEN-LAST:event_jMSalirMouseClicked

    private void escritorioComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_escritorioComponentRemoved

        //Captura el evento de cierre de ventana y vuelve a actualizar las reservas
        actualizaconDeHabitacionYReserva();
    }//GEN-LAST:event_escritorioComponentRemoved

    private void escritorioComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_escritorioComponentResized

        //Captura el evento de redimension de la ventana, quita el logo y lo vuelve a colocar en la esquina inferior izquierda
        escritorio.remove(logo);
        escritorio.repaint();
        colocarLogo();
    }//GEN-LAST:event_escritorioComponentResized

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JMenuItem jMGestionDeReserva;
    private javax.swing.JMenu jMHabitacion;
    private javax.swing.JMenu jMHuesped;
    private javax.swing.JMenuItem jMICategorias;
    private javax.swing.JMenuItem jMIEdicionDeHabitaciones;
    private javax.swing.JMenuItem jMIEdicionDeHuesped;
    private javax.swing.JMenuItem jMIGestionDeHabitacion;
    private javax.swing.JMenuItem jMIGestionDeHuesped;
    private javax.swing.JMenuItem jMIReservaPorFecha;
    private javax.swing.JMenuItem jMIReservaPorHabitacion;
    private javax.swing.JMenuItem jMIReservaPorHuesped;
    private javax.swing.JMenu jMReserva;
    private javax.swing.JMenu jMSalir;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JLabel logo;
    // End of variables declaration//GEN-END:variables

    //Recibe un componente por parametro y realiza las tareas de remover las ventanas activas, repintar el fondo y colocar la ventana nueva
    private void abrirVentana(Component cpm) {

        escritorio.removeAll();
        escritorio.repaint();
        cpm.setVisible(true);
        escritorio.add(cpm);
        colocarLogo();
        escritorio.moveToFront(cpm);
    }

    //Crea un label y coloca el logo de la ULP, y lo posiciona en la esquina inferior izquierda
    private void colocarLogo() {

        Icon icono = new ImageIcon(new ImageIcon(getClass().getResource("/continental/imagenes/LogoFull-w.png")).getImage());
        logo.setText("");
        logo.setSize(240, 145);
        logo.setLocation(escritorio.getWidth() - 260, escritorio.getHeight() - 160);
        logo.setIcon(icono);
        escritorio.add(logo);
    }

    //Actualiza la lista de reservas activas
    private void actualizaconDeHabitacionYReserva() {
        
        ArrayList<Reserva> ListaDeReserva = Vista.getRD().listarReservas();
        for (Reserva reserva : ListaDeReserva) {
            
            if ((LocalDate.now().isAfter(reserva.getFi()) || LocalDate.now().equals(reserva.getFi())) && (LocalDate.now().isBefore(reserva.getFf()) || LocalDate.now().equals(reserva.getFf()))) {
                
                Habitacion hab = HabD.buscarHabitacionPorId(reserva.getHabitacion().getIdHabitacion());
                hab.setEstado(false);
                HabD.editarHabitacion(hab);
            }
            
            if (LocalDate.now().isAfter(reserva.getFf())) {
                
                Habitacion hab = HabD.buscarHabitacionPorId(reserva.getHabitacion().getIdHabitacion());
                hab.setEstado(true);
                HabD.editarHabitacion(hab);
                Reserva res = RD.buscarReservaPorId(reserva.getIdReserva());
                RD.eliminarReserva(res.getIdReserva());
            }
        }
    }
}
